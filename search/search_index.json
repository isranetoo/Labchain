{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Labchain","text":"<p>Simulator of chemistry laboratory experiments with reagents, temperature, and yield.</p>"},{"location":"reference/","title":"API - Reference","text":""},{"location":"reference/#labchain.simulator.Reagent","title":"<code>Reagent</code>","text":"<p>Represents a chemical reagent.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Name of the reagent.</p> required <code>amount</code> <code>float</code> <p>Amount in mol.</p> required Source code in <code>labchain\\labchain\\simulator.py</code> <pre><code>class Reagent:\n    \"\"\"\n    Represents a chemical reagent.\n\n    Args:\n        name (str): Name of the reagent.\n        amount (float): Amount in mol.\n    \"\"\"\n    def __init__(self, name: str, amount: float):\n        self.name = name\n        self.amount = amount\n</code></pre>"},{"location":"reference/#labchain.simulator.Simulator","title":"<code>Simulator</code>","text":"<p>Chemical experiment simulator.</p> <p>Parameters:</p> Name Type Description Default <code>temperature</code> <code>float</code> <p>Temperature in \u00b0C.</p> <code>25.0</code> Source code in <code>labchain\\labchain\\simulator.py</code> <pre><code>class Simulator:\n    \"\"\"\n    Chemical experiment simulator.\n\n    Args:\n        temperature (float): Temperature in \u00b0C.\n    \"\"\"\n    def __init__(self, temperature: float = 25.0):\n        self.temperature = temperature\n        self.reagents: List[Reagent] = []\n\n    def add_reagent(self, name: str, amount: float):\n        \"\"\"Adds a reagent to the experiment.\"\"\"\n        self.reagents.append(Reagent(name, amount))\n\n    def calculate_yield(self) -&gt; float:\n        \"\"\"\n        Calculates the theoretical yield based on temperature and reagents.\n\n        Returns:\n            float: Estimated yield percentage.\n        \"\"\"\n        base = sum(r.amount for r in self.reagents)\n        temp_factor = 1 + (self.temperature - 25) * 0.01\n        return min(100, base * temp_factor * 10)\n</code></pre>"},{"location":"reference/#labchain.simulator.Simulator.add_reagent","title":"<code>add_reagent(name, amount)</code>","text":"<p>Adds a reagent to the experiment.</p> Source code in <code>labchain\\labchain\\simulator.py</code> <pre><code>def add_reagent(self, name: str, amount: float):\n    \"\"\"Adds a reagent to the experiment.\"\"\"\n    self.reagents.append(Reagent(name, amount))\n</code></pre>"},{"location":"reference/#labchain.simulator.Simulator.calculate_yield","title":"<code>calculate_yield()</code>","text":"<p>Calculates the theoretical yield based on temperature and reagents.</p> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Estimated yield percentage.</p> Source code in <code>labchain\\labchain\\simulator.py</code> <pre><code>def calculate_yield(self) -&gt; float:\n    \"\"\"\n    Calculates the theoretical yield based on temperature and reagents.\n\n    Returns:\n        float: Estimated yield percentage.\n    \"\"\"\n    base = sum(r.amount for r in self.reagents)\n    temp_factor = 1 + (self.temperature - 25) * 0.01\n    return min(100, base * temp_factor * 10)\n</code></pre>"}]}